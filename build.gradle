plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'groovy'
}

group = 'com.roha'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
apply plugin: 'groovy'
repositories {
	mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/hsqldb/hsqldb
    // https://mvnrepository.com/artifact/com.h2database/h2
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'

    compile 'mysql:mysql-connector-java:8.0.12'
    compile 'org.springframework.boot:spring-boot-starter-mail:1.5.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-web'
    testCompile 'com.icegreen:greenmail:1.5.7'
    compile 'org.json:json:20171018'
    compile 'joda-time:joda-time:2.2'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.codehaus.groovy:groovy'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile(
            'junit:junit:4.12',
            'org.codehaus.groovy:groovy-all:2.4.11',
            'org.spockframework:spock-core:1.1-groovy-2.4',
            'org.spockframework:spock-spring:1.1-groovy-2.4'
    )
    testCompile( 'com.athaydes:spock-reports:1.6.2' ) {
        transitive = false // this avoids affecting your version of Groovy/Spock
    }
    // if you don't already have slf4j-api and an implementation of it in the classpath, add this!
    testCompile 'org.slf4j:slf4j-api:1.7.13'
}

test {
    useJUnit {
        includeCategories 'com.roha.meemettycho.UnitTest'
    }
    testLogging {
        showStandardStreams = true
    }
}
